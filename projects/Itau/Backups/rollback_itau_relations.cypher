# üí° Sugest√µes de Consolida√ß√£o & Boas Pr√°ticas ‚Äì Menir / Ita√∫

## Objetivo
Garantir que os scripts de ingest√£o e relacionamento (Neo4j) funcionem de forma robusta, audit√°vel, com valida√ß√µes e rollback, para evitar problemas futuros.

---

## üìã Checklist de Recursos / Itens a Integrar

| √Årea | Pr√°tica recomendada | Arquivo / Local sugerido |
|---|---|---|
| Valida√ß√£o inicial do CSV | Verificar campos obrigat√≥rios (id, doc_id, parte_id, valor, data, tipo) antes de MERGE. Linhas inv√°lidas devem ser descartadas ou logadas. | No script de ingest√£o (`setup_itau*.cypher`) |
| Cria√ß√£o de n√≥s obrigat√≥rios primeiro | Inserir `Documento` e `Parte` *antes* de processar `Transacao`, para garantir que os relacionamentos ter√£o destino. | Scripts de ingest√£o dos arquivos CSV desses tipos |
| Relacionamentos faltantes (patch) | Script que identifica transa√ß√µes sem relacionamento (`NOT (t)-[:REFERE_A]...`, `NOT (t)-[:ENVOLVENDO]...`) e cria relacionamentos se os n√≥s existem. | Patch em `projects/Itau/setup_itau_relations_patch.cypher` |
| Valida√ß√µes p√≥s-import | Execu√ß√£o autom√°tica de consultas como: contagem de n√≥s, lista de transa√ß√µes relacionadas, verificar IDs correspondentes.Documento/Parte. | `validate_itau_relations.cypher` ou parte do mesmo script |
| Logs ou relat√≥rios de qualidade | Gerar relat√≥rio JSON/CSV com n√∫mero de n√≥s criados, n√∫mero de relacionamentos criados, propor√ß√£o de transa√ß√µes sem relacionamento, identificadores faltantes. | `reports/itau_ingest_report.json` |
| Defini√ß√µes de esquema / constraints | Garantir √≠ndices e constraints (`UNIQUENESS`) para `Documento.id`, `Parte.id`, `Transacao.id`, etc. | Em `schema.cypher` ou `constraints.cypher` |
| Versionamento de scripts | Manter scripts ‚Äúvers√µes defeituosas‚Äù com marca√ß√µes ou renomea√ß√µes como `obsoletos/v1`, `versao_final`, etc., evitar sobrescrita sem revis√£o. | Diret√≥rio `projects/Itau/` ou similar |
| Backup / Rollback | Ter backup dos dados ou snapshots antes de grandes migra√ß√µes ou mudan√ßas de script. Tamb√©m scripts de rollback limitado caso seja detectado erro grave. | Documento ou pasta `backups/itau/` ou ‚Äúrollback‚Äù scripts |
| Integra√ß√£o cont√≠nua (CI/CD) | Se poss√≠vel, incluir smoke tests ou pipelines de teste que rodem scripts em inst√¢ncia de teste antes de aplicar em produ√ß√£o. | GitHub Actions / workflow de CI |

---

## ‚öôÔ∏è Modelo de Arquivos Sugeridos

- `projects/Itau/setup_itau_relations_patch.cypher` ‚Äî patch para relacionamentos faltantes  
- `projects/Itau/validate_itau_relations.cypher` ‚Äî conjunto de queries de valida√ß√£o ap√≥s ingest√£o  
- `reports/itau_ingest_report.json` ‚Äî relat√≥rio de qualidade p√≥s-execu√ß√£o  
- `schema/constraints_itau.cypher` ‚Äî constraints/√≠ndices para campos chave  
- `backups/itau/rollback_itau_relations.cypher` ‚Äî script para desfazer (ou limpar relacionamentos) se for necess√°rio

---

## üîê Exemplo de Relat√≥rio JSON de Qualidade

```json
{
  "timestamp": "2025-09-19TXX:XX:XX-03:00",
  "n_transacoes_totais": 4,
  "n_documentos": 5,
  "n_partes": 2,
  "n_relacionamentos_refere_a": 4,
  "n_relacionamentos_envolvendo": 4,
  "transacoes_sem_documento": [],
  "transacoes_sem_parte": [],
  "erros_detectados": []
}
